<!--https://www.redblobgames.com/grids/hexagons/implementation.html-->

<div class="game"
  {{did-insert (action this.setupGame)}}
  {{will-destroy (action this.teardown)}}
  >
  <div class="game-container">
    <div class="epm-modal-container {{this.epmModalContainerClass}}">
      <EpmModalContainer/>
    </div>
    <div class="header">
      <h2>GeoQuest - Octane</h2>
    </div>
    <AnimatedContainer class="gameboard">
      <section>
        <LargeMap @map={{@model.mirageMap}} />
      </section>
    </AnimatedContainer>

    <div class="debugWrapper">
      <div class="row">
        <div class="col">
          <div>
            Mouse: {{this.gameboard.currentHex}}&nbsp;/&nbsp;{{this.gameboard.mouseXY}}
          </div>
          <div>
            Player: {{this.game.gameboard.playerHex}}&nbsp;/&nbsp;{{this.game.gameboard.playerXY}}
          </div>
          {{#if false}}
            [{{this.game.player.sightRange}}]
          <div>
            Ship: <p>{{this.game.gameboard.shipHex}}&nbsp;/&nbsp;{{this.game.gameboard.shipXY}}</p>
          </div>
          {{#if showCameraDebug}}
            <div>
              Camera:
            </div>
            <div>
              world width:{{this.camera.worldX}} height:{{this.camera.worldY}}
            </div>
            <div>
              hexes: width:{{this.mapService.currentLayout.hexWidth}} height:{{this.mapService.currentLayout.hexHeight}}
            </div>
            <div>
              top left: x:{{this.mapService.topLeftPoint.x}} y:{{this.mapService.topLeftPoint.y}}
            </div>
            <div>
              bottom right: x:{{this.mapService.bottomRightPoint.x}} y:{{this.mapService.bottomRightPoint.y}}
            </div>
          {{/if}}
          <div>
              Path Distance: {{this.gameboard.pathDistanceToMouseHex}}
            <p>pathFindingDebug {{this.game.pathFindingDebug}}</p>
          </div>
          <div>
            Player Health: {{this.game.player.healthPercentage}}%
          </div>
          <div>
            Player Flags: {{this.game.describePlayerFlags}}
          </div>
          <div>
            Ship Health: {{#if this.game.player.boardedTransport}}{{this.game.player.boardedTransport.healthPercentage}}%{{/if}}
          </div>
          {{/if}}
        </div>

      </div>
    </div>

    <div>
      <input type="range" id="zoom" name="zoom"
             min="0" max="100" value="{{this.camera.stageScaleDisplay}}" step="10">
      <label for="zoom">Zoom</label>
    </div>

    <PressAndHoldButton
      @press={{perform this.camera.scaleStageBy -1}}
      @release={{cancel-all this.camera.scaleStageBy}}>--</PressAndHoldButton>

    <PressAndHoldButton
      @press={{perform this.camera.scaleStageBy 1}}
      @release={{cancel-all this.camera.scaleStageBy}}>++</PressAndHoldButton>

<!--    <MiniMap @map={{!@model.mirageMap}} />-->

    <div class="game-controls">
      <button class="btn inventory" {{on "click" (fn showInventory)}} >
        <EmberTooltip tooltipClass="tooltip-controls" >Inventory</EmberTooltip>
      </button>
      <button class="btn trophy" {{on "click" (fn saveGame)}}>
        <EmberTooltip tooltipClass="tooltip-controls" >Awards</EmberTooltip>
      </button>
      <button class="btn gems" {{on "click" (fn clickGems)}}>
        <EmberTooltip tooltipClass="tooltip-controls">Gems</EmberTooltip>
      </button>
      <button class="btn settings" {{on "click" (fn showConfigDialog)}} >
        <EmberTooltip tooltipClass="tooltip-controls" >Settings</EmberTooltip>
      </button>
    </div>

  </div>
</div>
